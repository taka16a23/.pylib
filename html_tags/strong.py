#!/usr/bin/env python
# -*- coding: utf-8 -*-
r"""strong -- strong tag

"""
from .html_tag import HtmlTag


class Strong(HtmlTag):
    """Strong

    Strong is a HtmlTag.
    Responsibility:

    HTML の強い重要性要素 (<strong>) は、内容の重要性、重大性、
    または緊急性が高いテキストを表します。ブラウザーは一般的に太字で描画します。

    コンテンツカテゴリ	フローコンテンツ, 記述コンテンツ, 知覚可能コンテンツ
    許可されている内容	記述コンテンツ
    タグの省略	不可。開始タグと終了タグの両方が必要です。
    許可されている親要素	記述コンテンツを受け入れるすべての要素、またはフローコンテンツを受け入れるすべての要素。
    許可されている ARIA ロール	すべて
    DOM インターフェイス	HTMLElement

    使用上のメモ
    <strong> 要素は「強い重要性」のある内容、
    つまり (警告など) 高い重大性や緊急性のある物事のためのものです。
    これは、ページ全体にとって非常に重要な文である可能性があります。
    または、いくつかの単語が周囲のコンテンツと比較して
    重要であると指摘することができます。

    通常、この要素は既定で太字で表示されます。
    しかし、単に太字にするために使用しないでください。
    そのような用途には CSS の font-weight プロパティを使用してください。
    高い水準の重要性を示すことなく、あるテキストに注意を引かせたい場合は
    <b> 要素を使用してください。
    強調する文字列をマークしたい場合は <em> 要素を使用してください。

    他に、ページのテキストの中でメモや警告を表す段落のラベルを記述することも
    <strong> の許容される使い方です。

    <b> と <strong>
    新しい開発者をよく悩ませることが、
    ウェブサイトの表示において同じことを表現するために、
    なぜたくさんの方法があるかということです。
    <b> と <strong> はもっともよくある混乱の源で、
    開発者に「<b> と <strong> のどちらを使えばいいんですか？
    どちらも同じことをするんでしょう？」という疑問を起こします。

    それは正しくありません。 <strong> 要素はより
    高い重要性を持つコンテンツのためのものであるのに対し、
    <b> 要素はより重要であるという意味なしに、
    テキストに注意を引かせるために使用します。

    HTML5 ではどちらも有効で意味のある要素であり、
    ほとんどのブラウザーでは、同じ既定のスタイル (太字) が
    使用されていることは間違いありません
    (ただし、古いブラウザーの中には <strong> に下線を引くものもあります)。
    それぞれの要素は特定の種類のシナリオで使用するためのものです。
    単に装飾のために太字のテキストを使用する場合は、
    代わりに CSS の font-weight プロパティを使用してください。

    囲まれたテキストの意図された意味または目的によって、
    使用する要素を決定してください。
    伝えられる意味がどのような意味であるかがすべてです。

    <em> と <strong>
    この混乱に加えて、 HTML 4 では <strong> を単により強い強調としていましたが、
    HTML 5 では <strong> を「内容の強い重要性」を表すもの定義しています。
    これは重要な違いです。

    <em> が (「私はにんじんが<em>好きです<em>」と
    「私は<em>にんじんが<em>好きです」のように)
    発音の強調によって文の意味が変わる場合に使用するのに対し、
    <strong> は (例えば「警告！これはとても危険です」のように) 文の
    一部に重要性を加えるために使用します。
    <strong> と <em> のどちらも入れ子にして、
    それぞれ相対的な重要度や強調度を高めるためことができます。
    """
    def __init__(self, tags=[], attrs=None, **kwargs):
        super(HtmlTag, self).__init__(name='strong', tags=[], attrs=None, **kwargs)



# For Emacs
# Local Variables:
# coding: utf-8
# End:
# strong.py ends here
